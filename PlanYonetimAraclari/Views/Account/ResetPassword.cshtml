@model PlanYonetimAraclari.Models.ResetPasswordViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Şifre Sıfırlama - Plan345";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link type="image/png" sizes="96x96" rel="icon" href="~/icons8-plan-96.png">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50">
    <div class="min-h-screen flex items-center justify-center p-4">
        <div class="bg-white rounded-lg shadow-lg p-8 w-full max-w-md">
            <div class="text-center mb-8">
                <div class="flex items-center justify-center mb-6">
                    <i class="fas fa-tasks text-blue-500 text-2xl"></i>
                    <a href="/" class="text-2xl font-bold tracking-tight text-gray-900 ml-2">Plan<span class="text-blue-500">345</span></a>
                </div>
                <h2 class="text-2xl font-semibold text-gray-900">Yeni Şifre Oluştur</h2>
                <p class="text-gray-600 text-sm mt-2">Hesabınız için yeni bir şifre belirleyin</p>
            </div>

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="mb-4 p-4 rounded-md bg-red-50 border border-red-200">
                    <div class="flex items-center">
                        <i class="fas fa-exclamation-circle text-red-500 mr-2"></i>
                        <p class="text-red-800">@TempData["ErrorMessage"]</p>
                    </div>
                </div>
            }

            <!-- Validation Summary -->
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="mb-4 p-4 rounded-md bg-red-50 border border-red-200">
                    <div class="flex items-center">
                        <i class="fas fa-exclamation-circle text-red-500 mr-2"></i>
                        <div asp-validation-summary="All" class="text-red-800"></div>
                    </div>
                </div>
            }

            <div class="mt-8">
                <form asp-action="ResetPassword" method="post" class="space-y-6">
                    @Html.AntiForgeryToken()
                    <input asp-for="Code" type="hidden" />
                    
                    <!-- Email Input -->
                    <div>
                        <label asp-for="Email" class="block text-sm font-medium leading-6 text-gray-900"></label>
                        <div class="mt-2">
                            <input asp-for="Email" class="px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="ornek@sirket.com" required>
                        </div>
                        <span asp-validation-for="Email" class="text-xs text-red-600"></span>
                    </div>

                    <!-- Password Input -->
                    <div>
                        <label asp-for="Password" class="block text-sm font-medium leading-6 text-gray-900"></label>
                        <div class="mt-2 relative">
                            <input asp-for="Password" value="@Model?.Password" class="px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="••••••••" required>
                            <button type="button" onclick="togglePassword('Password')" class="absolute inset-y-0 right-0 pr-3 flex items-center">
                                <i class="far fa-eye text-gray-400"></i>
                            </button>
                        </div>
                        <span asp-validation-for="Password" class="text-xs text-red-600"></span>
                        <p class="mt-1 text-xs text-gray-500">Şifreniz en az 6 karakter uzunluğunda olmalı ve büyük/küçük harf, rakam ve özel karakter içermelidir.</p>
                    </div>

                    <!-- Confirm Password Input -->
                    <div>
                        <label asp-for="ConfirmPassword" class="block text-sm font-medium leading-6 text-gray-900"></label>
                        <div class="mt-2 relative">
                            <input asp-for="ConfirmPassword" value="@Model?.ConfirmPassword" class="px-3 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder="••••••••" required>
                            <button type="button" onclick="togglePassword('ConfirmPassword')" class="absolute inset-y-0 right-0 pr-3 flex items-center">
                                <i class="far fa-eye text-gray-400"></i>
                            </button>
                        </div>
                        <span asp-validation-for="ConfirmPassword" class="text-xs text-red-600"></span>
                    </div>

                    <!-- Submit Button -->
                    <div>
                        <button type="submit" class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                            <i class="fas fa-key mr-2"></i> Şifremi Sıfırla
                        </button>
                    </div>

                    <div class="text-sm text-center mt-4">
                        <a href="/Account/Login" class="font-medium text-indigo-600 hover:text-indigo-500">
                            <i class="fas fa-arrow-left mr-1"></i> Giriş Sayfasına Dön
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        function togglePassword(id) {
            const input = document.getElementById(id);
            const icon = input.nextElementSibling.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Hata mesajı gösterme alanı oluşturalım
        document.addEventListener('DOMContentLoaded', function() {
            // Hata mesajı alanını oluştur (zaten varsa oluşturmaz)
            if (!document.getElementById('error-message')) {
                const form = document.querySelector('form');
                const errorDiv = document.createElement('div');
                errorDiv.id = 'error-message';
                errorDiv.className = 'mb-4 p-4 rounded-md bg-red-50 border border-red-200 hidden';
                
                const innerContent = document.createElement('div');
                innerContent.className = 'flex items-center';
                
                const icon = document.createElement('i');
                icon.className = 'fas fa-exclamation-circle text-red-500 mr-2';
                
                const errorText = document.createElement('p');
                errorText.id = 'error-text';
                errorText.className = 'text-red-800';
                errorText.textContent = 'Lütfen form alanlarını kontrol edin.';
                
                innerContent.appendChild(icon);
                innerContent.appendChild(errorText);
                errorDiv.appendChild(innerContent);
                
                // Form'un başına ekle
                form.insertBefore(errorDiv, form.firstChild);
            }
            
            // Form submit olayını yakala
            document.querySelector('form').addEventListener('submit', function(event) {
                if (!validatePassword()) {
                    event.preventDefault(); // Form gönderimini engelle
                }
            });
        });
        
        // Şifre gereksinimlerini kontrol eden fonksiyon
        function validatePassword() {
            const password = document.getElementById('Password').value;
            const errorMessageDiv = document.getElementById('error-message');
            const errorTextElement = document.getElementById('error-text');
            
            // Şifre gereksinimlerini kontrol et
            const hasUpperCase = /[A-Z]/.test(password);
            const hasLowerCase = /[a-z]/.test(password);
            const hasNumbers = /\d/.test(password);
            const hasNonAlphaNumeric = /[^A-Za-z0-9]/.test(password);
            const isLongEnough = password.length >= 8;
            
            // Hata mesajlarını oluştur
            let errorMessages = [];
            
            if (!hasUpperCase) {
                errorMessages.push("Şifre en az bir büyük harf içermelidir");
            }
            
            if (!hasLowerCase) {
                errorMessages.push("Şifre en az bir küçük harf içermelidir");
            }
            
            if (!hasNumbers) {
                errorMessages.push("Şifre en az bir rakam içermelidir");
            }
            
            if (!hasNonAlphaNumeric) {
                errorMessages.push("Şifre en az bir özel karakter içermelidir");
            }
            
            if (!isLongEnough) {
                errorMessages.push("Şifre en az 8 karakter uzunluğunda olmalıdır");
            }
            
            // Şifre ve şifre tekrarı eşleşiyor mu kontrol et
            const confirmPassword = document.getElementById('ConfirmPassword').value;
            if (password !== confirmPassword) {
                errorMessages.push("Şifreler eşleşmiyor");
            }
            
            // Hata varsa göster
            if (errorMessages.length > 0) {
                errorTextElement.innerHTML = errorMessages.join("<br>");
                errorMessageDiv.classList.remove("hidden");
                return false;
            } else {
                errorMessageDiv.classList.add("hidden");
                return true;
            }
        }
    </script>

    <!-- Client-side validation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
</body>
</html> 